{"version":3,"sources":["components/AddTask/AddTask.js","components/TaskComp/TaskComp.js","components/LogInComp/LogInComp.js","components/SignUpComp/SignUpComp.js","components/HomeComp/HomeComp.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","props","year","Date","getFullYear","id","onSubmit","handleSubmit","method","for","className","type","placeholder","required","min","max","TaskComp","useState","tasks","setTasks","taskForm","setTaskForm","useEffect","fetch","user","then","res","json","data","getTasks","compTask","e","taskId","parseInt","target","mode","headers","body","JSON","stringify","response","status","console","log","uname","length","map","task","key","Tid","Tname","onClick","Tdesc","preventDefault","uid","tname","document","getElementById","value","tdesc","desc","descString","tdate","dd","mm","yy","formdd","formmm","formyy","dateString","ttime","hr","formhr","formmin","tstring","timeString","reset","LogInComp","handleLogin","pattern","toggleSignup","SignUpComp","pass1","setpass1","pass2","setpass2","name","email","pass","resetHome","minLength","onChange","test","toggleLogin","HomeComp","loginState","signupState","loggedIn","App","setloggedIn","uId","setuId","uName","setuName","setloginState","setsignupState","logState","history","useHistory","homePage","push","taskPage","logStatus","localStorage","getItem","userId","userName","logOut","clear","exact","path","children","resStatus","dir","setItem","userid","username","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.877fe2c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AddTask.css';\r\n\r\nconst AddTask = (props) => {\r\n    let year = new Date().getFullYear();\r\n    return (\r\n        <div id='addTaskDiv'>\r\n            <form onSubmit={props.handleSubmit} method='POST' id='taskForm'>\r\n                <label for='taskname' className='txtLabels'>Task Name:</label>\r\n                <input type='text' id='taskname' placeholder='Clean garage' required></input>\r\n                <label for='taskdesc' className='txtLabels'>Description:</label>\r\n                <textarea id='taskdesc' placeholder='(optional)'></textarea>\r\n                <label for='taskdate' className='txtLabels'>Date:</label>\r\n                <div id='taskdate'>\r\n                    <input type='number' min=\"1\" max=\"31\" placeholder=\"DD\" id=\"dateD\"></input>/\r\n                    <input type='number' min=\"1\" max=\"12\" placeholder=\"MM\" id=\"dateM\"></input>/\r\n                    <input type='number' min={year} max=\"2099\" placeholder=\"YYYY\" id=\"dateY\"></input>\r\n                </div>\r\n                <label for='tasktime' className='txtLabels'>Time:</label>\r\n                <div id='tasktime'>\r\n                    <input type='number' min=\"0\" max=\"23\" placeholder=\"HH\" id=\"timeH\"></input>: \r\n                    <input type='number' min=\"0\" max=\"59\" placeholder=\"MM\" id=\"timeM\"></input>\r\n                </div>\r\n                <button type='submit' id='addBtn'>Add!</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTask;","import React, { useState, useEffect } from 'react';\r\nimport AddTask from '../AddTask/AddTask';\r\nimport './TaskComp.css';\r\n\r\nconst TaskComp = (props) => {\r\n    \r\n    const [tasks, setTasks] = useState([]);\r\n    const [taskForm, setTaskForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getTasks = () => {\r\n            fetch(`api/tasks/${props.user}`)\r\n            .then(res => res.json())\r\n            .then(data => setTasks(data));\r\n        };\r\n        getTasks();\r\n    }, [props.user]);\r\n\r\n    const getTasks = () => {\r\n        fetch(`api/tasks/${props.user}`)\r\n        .then(res => res.json())\r\n        .then(data => setTasks(data));\r\n    };\r\n\r\n    const toggleForm = () => {\r\n        setTaskForm(!taskForm);\r\n    };\r\n\r\n    const compTask = (e) => {\r\n        let taskId = parseInt(e.target.id);\r\n        fetch('api/task/u/complete', {\r\n            mode: 'cors',\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\"taskid\": taskId})\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                getTasks();\r\n            } else {\r\n                console.log(\"error: \" + response.status)\r\n            }\r\n        })\r\n    }\r\n\r\n    //Delete task function\r\n    // const delTask = (e) => {\r\n    //     let taskId = parseInt(e.target.id);\r\n    //     fetch('api/task/del', {\r\n    //         mode: 'cors',\r\n    //         method: 'post',\r\n    //         headers: {\r\n    //             'Accept': 'application/json, text/plain, */*',\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\"taskid\": taskId})\r\n    //     }).then((response) => {\r\n    //         if (response.status === 200) {\r\n    //             getTasks();\r\n    //         } else {\r\n    //             console.log(\"error: \" + response.status)\r\n    //         }\r\n    //     })\r\n    // };\r\n\r\n    const timeString = () => {\r\n        let hr;\r\n        let min;\r\n        let formhr = document.getElementById('timeH').value;\r\n        console.log(typeof(formhr));\r\n        let formmin = document.getElementById('timeM').value;\r\n        formhr.length === 1 ? hr = \"0\" + formhr : hr = formhr;\r\n        formmin.length === 1 ? min = \"0\" + formmin : min = formmin;\r\n        formhr === '' ? hr = \"00\" : hr = hr;\r\n        formmin === '' ? min = \"00\" : min = min;\r\n        let tstring = hr + min + \"00\";\r\n        if (parseInt(tstring) === 0) {\r\n            return 'none';\r\n        } else {\r\n            return tstring;\r\n        }\r\n    };\r\n\r\n    const dateString = () => {\r\n        let dd;\r\n        let mm;\r\n        let yy;\r\n        let formdd = document.getElementById('dateD').value;\r\n        let formmm = document.getElementById('dateM').value;\r\n        let formyy = document.getElementById('dateY').value;\r\n        formdd.length === 1 ? dd = \"0\" + formdd : dd = formdd;\r\n        formmm.length === 1 ? mm = \"0\" + formmm : mm = formmm;\r\n        formyy.length === 1 ? yy = \"0\" + formyy : yy = formyy;\r\n        let dstring = yy + mm + dd;\r\n        if (dd === '' || mm === '' || yy === '' ) {\r\n            return 'none';\r\n        } else {\r\n            return dstring;\r\n        }\r\n    };\r\n\r\n    const descString = () => {\r\n        let desc = document.getElementById('taskdesc').value;\r\n        if (desc === '') {\r\n            return 'none';\r\n        } else {\r\n            return desc;\r\n        };\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const uid = props.user;\r\n        const tname = document.getElementById('taskname').value;\r\n        const tdesc = descString();\r\n        const tdate = dateString();\r\n        const ttime = timeString();\r\n        fetch('api/newtask', {\r\n            mode: 'cors',\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"userid\": uid,\r\n                \"taskname\": tname,\r\n                \"taskdesc\": tdesc,\r\n                \"taskdate\": tdate,\r\n                \"tasktime\": ttime\r\n            })\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                document.getElementById('taskForm').reset();\r\n                setTaskForm(false);\r\n                getTasks();\r\n            } else {\r\n                console.log(\"error: \" + response.status)\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div id='taskDiv'>\r\n            <h4>Welcome back, {props.uname}</h4>\r\n            <div id='taskContainer'>\r\n                {tasks.length > 0 ? [\r\n                    tasks.map(task => (\r\n                    <div key={task.Tid} className='task'>\r\n                        <div className='taskHeader'>\r\n                            <h4 className='taskTitle'>{task.Tname}</h4>\r\n                            <p id={task.Tid} className='compBtn' onClick={compTask}>X</p>\r\n                        </div>\r\n                        <div className='taskDesc'>\r\n                            {task.Tdesc}\r\n                        </div>\r\n                    </div>\r\n                ))] : <p>No tasks set</p>\r\n                 }\r\n                 <p id='addTaskBtn' onClick={toggleForm}>New Task</p>\r\n                {taskForm ? <AddTask handleSubmit={handleSubmit}/> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskComp;","import React from 'react';\r\nimport './LogInComp.css';\r\n\r\nconst LogInComp = (props) => {\r\n    return (\r\n        <div id='loginDiv'>\r\n            <form onSubmit={props.handleLogin} method='POST' id='loginForm'>\r\n                {/* <label for='u_email'>email: </label> */}\r\n                <input \r\n                    type='text' \r\n                    id='u_email' \r\n                    placeholder='someone@organised.com'\r\n                    pattern=\"[a-zA-Z0-9!#$%&amp;'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\"\r\n                    required\r\n                    ></input>\r\n                {/* <label for='u_pass'>password: </label> */}\r\n                <input \r\n                    type='password' \r\n                    id='u_pass'\r\n                    placeholder='password'\r\n                    required\r\n                    ></input>\r\n                <button type='submit' id='loginBtn'>Log in</button>\r\n            </form>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <p>Don't have an account? <span onClick={props.toggleSignup} id='clickHere'>click here</span> to sign up</p>\r\n            {/* <p onClick={props.resetHome}>X</p> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogInComp;","import React, { useState, useEffect } from 'react';\r\nimport './SignUpComp.css';\r\n\r\nconst SignUpComp = (props) => {\r\n    const [pass1, setpass1] = useState('i');\r\n    const [pass2, setpass2] = useState('o');\r\n\r\n    useEffect(() => {\r\n        const checkmatch = () => {\r\n            if (pass1 === pass2) {\r\n                return '😀';\r\n            } else {\r\n                return '🙁';\r\n            };\r\n        };\r\n        checkmatch();\r\n    }, [pass1, pass2]);\r\n\r\n    const checkempty = () => {\r\n        if (pass1 === '') {\r\n            setpass1('i');\r\n        }\r\n        if (pass2 === '') {\r\n            setpass2('o');\r\n        }\r\n    }\r\n\r\n    const checkmatch = () => {\r\n        checkempty();\r\n        if (pass1 === pass2) {\r\n            return '😀';\r\n        } else {\r\n            return '🙁';\r\n        };\r\n    };\r\n    \r\n    const checknum = () => {\r\n        if (/\\d/.test(pass1) | /\\d/.test(pass2)) {\r\n            return '😀';\r\n        } else {\r\n            return '🙁';\r\n        };\r\n    };\r\n\r\n    const setp1 = (e) => {\r\n        setpass1(e.target.value);\r\n    };\r\n\r\n    const setp2 = (e) => {\r\n        setpass2(e.target.value);\r\n    };\r\n\r\n    const checksubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = document.getElementById('username').value;\r\n        const email = document.getElementById('email').value;\r\n        const pass = document.getElementById('pass').value;\r\n        fetch('api/newacc', {\r\n            mode: 'cors',\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": name,\r\n                \"pass\": pass,\r\n                \"email\": email\r\n            })\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                console.log('congrats');\r\n                document.getElementById('signupForm').reset();\r\n                props.resetHome();\r\n            } else {\r\n                console.log('error: ' + response.status);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id='signupDiv'>\r\n            <p>Fill in the fields below</p>\r\n            <form id='signupForm' onSubmit={checksubmit} method='POST'>\r\n                <input type='text' id='username' className='signupItem' placeholder='First Name' required></input>\r\n                <input type='text' \r\n                        id='email'\r\n                        className='signupItem' \r\n                        placeholder='Email'\r\n                        pattern=\"[a-zA-Z0-9!#$%&amp;'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\"\r\n                        required></input>\r\n                <input minLength='8' \r\n                       type='password' \r\n                       id='pass'\r\n                       className='signupItem' \r\n                       placeholder='Password' \r\n                       required \r\n                       onChange={setp1}></input>\r\n                <input type='password' \r\n                       minLength='8' \r\n                       id='rpass' \r\n                       className='signupItem'\r\n                       placeholder='Confirm Password' \r\n                       required \r\n                       onChange={setp2}></input>\r\n                <button type='submit' id='signupBtn'>Sign Up</button>\r\n                <table id='passTable'> \r\n                    <tr>\r\n                        <td className='passTxt'>Passwords match :</td>\r\n                        <td className='passVal'>{checkmatch()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className='passTxt'>Contain number(s) :</td>\r\n                        <td className='passVal'>{checknum()}</td>\r\n                    </tr>\r\n                </table>\r\n            </form>\r\n            <div>\r\n                {/* <p>passwords match {checkmatch()}</p> */}\r\n                {/* <p>password <br />contains number(s) {checknum()}</p> */}\r\n            </div>\r\n            <br />\r\n            <p onClick={props.toggleLogin} id='clickLogin'>back to log in</p>\r\n            {/* <p onClick={props.resetHome}>X</p> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpComp;","import React from 'react';\r\nimport LogInComp from '../LogInComp/LogInComp';\r\nimport SignUpComp from '../SignUpComp/SignUpComp';\r\nimport './HomeComp.css';\r\n\r\n\r\nconst HomeComp = (props) => {\r\n    if (props.loginState) {\r\n        return <LogInComp {...props} />\r\n    } else if (props.signupState) {\r\n        return <SignUpComp {...props} />\r\n    } else {\r\n        return (\r\n            <div id='homeDiv'>\r\n                <div id='homeTxt'>\r\n                    <p>Welcome to ToGoList!</p> <br/>\r\n                    <p>A task manager app to help you keep track of your work!</p><br/>\r\n                    {props.loggedIn ? null : <p>Are you ready to become more organised? Click below to get started:</p>}<br/>\r\n                </div>\r\n                {props.loggedIn ? null : <button onClick={props.toggleSignup} id='signupBtn'>Organise Me!</button> }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default HomeComp;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport TaskComp from './components/TaskComp/TaskComp';\r\nimport HomeComp from './components/HomeComp/HomeComp';\r\n\r\n\r\nconst App = () => {\r\n  const [loggedIn, setloggedIn] = useState('false');\r\n  const [uId, setuId] = useState(0);\r\n  const [uName, setuName] = useState('');\r\n  const [loginState, setloginState] = useState(false);\r\n  const [signupState, setsignupState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    logState();\r\n  }, [loggedIn]);\r\n\r\n  const toggleLogin = () => {\r\n    setsignupState(false);\r\n    setloginState(!loginState);\r\n  };\r\n  const toggleSignup = () => {\r\n      setloginState(false);\r\n      setsignupState(!signupState);\r\n  };\r\n  const resetHome = () => {\r\n      setsignupState(false);\r\n      setloginState(false);\r\n  };\r\n\r\n  let history = useHistory();\r\n  // route functions\r\n  // home direct\r\n  const homePage = () => {\r\n    resetHome();\r\n    history.push('/');\r\n  };\r\n  // task direct\r\n  const taskPage = () => {\r\n    history.push('/tasks');\r\n  };\r\n  // login direct\r\n  // const loginPage = () => {\r\n  //   history.push('/login');\r\n  // };\r\n\r\n  const logState = () => {\r\n    const logStatus = localStorage.getItem('loggedIn');\r\n    const userId = localStorage.getItem('userId');\r\n    const userName = localStorage.getItem('userName');\r\n    setloggedIn(logStatus);\r\n    setuId(userId);\r\n    setuName(userName);\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    logState();\r\n    homePage();\r\n  }\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById('u_email').value;\r\n    const pass = document.getElementById('u_pass').value;\r\n    console.dir({\r\n      \"email\": email,\r\n      \"e-type\": typeof(email),\r\n      \"pass\": pass,\r\n      \"p-type\": typeof(pass),\r\n    });\r\n    let resStatus;\r\n    fetch('api/login', {\r\n            mode: 'cors',\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"pass\": pass,\r\n            })\r\n    })\r\n    .then(response => {\r\n      resStatus = response.status;\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      if (resStatus === 200) {\r\n        console.log(response);\r\n        localStorage.setItem('loggedIn', 'true');\r\n        localStorage.setItem('userId', response.userid);\r\n        localStorage.setItem('userName', response.username);\r\n        logState();\r\n        taskPage();\r\n        resetHome();\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div id='App'>\r\n      <nav>\r\n          <h3 id='title' onClick={homePage}>ToGoList</h3> \r\n          {loggedIn ? [\r\n            <ul className='navMain' key='x'>\r\n            <li className='navItem' key='1' onClick={taskPage}>Tasks</li>\r\n            <li className='navItem' key='2' onClick={logOut}>Log Out</li>\r\n            </ul>\r\n          ] : [\r\n                <ul className='navMain' key='y'>\r\n                  <li className='navItem' key='4' onClick={toggleSignup}>Sign Up</li>\r\n                  <li className='navItem' key='3' onClick={toggleLogin}>Log In</li>\r\n                </ul>\r\n              ]}\r\n        </nav>\r\n        {/* {loginState ? <LogInComp toggleSignup={toggleSignup} resetHome={resetHome} handleLogin={handleLogin}/> : null} */}\r\n        {/* {signupState ? <SignUpComp toggleLogin={toggleLogin} resetHome={resetHome} /> : null} */}\r\n        {/* {loginState | signupState === true ? null : <HomeComp toggleSignup={toggleSignup}/>} */}\r\n      <Switch>\r\n        <Route exact path='/' children={<HomeComp handleLogin={handleLogin} loggedIn={loggedIn} resetHome={resetHome} loginState={loginState} signupState={signupState} toggleSignup={toggleSignup} toggleLogin={toggleLogin}/> } />\r\n        {/* <Route exact path='/login' children={<LogInComp toggleSignup={toggleSignup} resetHome={resetHome} handleLogin={handleLogin} />} /> */}\r\n        <Route path='/tasks' children={loggedIn ? <TaskComp user={uId} uname={uName} logOut={logOut} homePage={homePage}/> : <Redirect to='/' />} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}